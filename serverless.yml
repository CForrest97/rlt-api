service: rocket-league-tracker-api

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: eu-west-2
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:PutItem
      Resource:
       - Fn::GetAtt: [ playerPlaylistRecord, Arn ]

plugins:
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-domain-manager

functions:
  getPlayer:
    handler: src/controllers/http/index.getPlayer
    events:
      - http:
          method: get
          path: players/{playerId}
          cors: true
          request:
            parameters:
              paths:
                playerId: true
    layers: # reference to the already existing layer with Chrome
      â€” arn:aws:lambda:us-east-1:764866452798:layer:chrome-aws-lambda:31

  getPlayerPlaylistRecord:
    handler: src/controllers/http/index.getPlayerPlaylistRecord
    events:
      - http:
          method: get
          path: players/{playerId}/{playlistId}
          cors: true
          request:
            parameters:
              paths:
                playerId: true
                playlistId: true
  trackPlayers:
    handler: src/controllers/cron/index.trackPlayers
    events:
      - schedule: cron(0 5 ? * * *)

resources:
  Resources:
    playerPlaylistRecord:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: rlt-player-playlist-record
        AttributeDefinitions:
          - AttributeName: player-playlist-id
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: N
        KeySchema:
          - AttributeName: player-playlist-id
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

custom:
  customDomain:
    rest:
      domainName: rlt-api.craigforrest.co.uk
      autodomain: true
